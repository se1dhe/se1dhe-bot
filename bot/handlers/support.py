# -*- coding: utf-8 -*-
from aiogram import Dispatcher, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.formatting import Text

from config.settings import ADMIN_IDS, DEFAULT_LANGUAGE
import logging

logger = logging.getLogger(__name__)


# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM
class SupportStates(StatesGroup):
    waiting_for_message = State()


async def cmd_support(message: types.Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /support
    –ù–∞—á–∏–Ω–∞–µ—Ç –¥–∏–∞–ª–æ–≥ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
    """
    language = message.from_user.language_code or DEFAULT_LANGUAGE

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
    await message.answer(
        get_localized_text('support_title', language) + "\n\n" +
        get_localized_text('support_description', language),
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(
                    text=get_localized_text('cancel', language),
                    callback_data="support:cancel"
                )]
            ]
        )
    )

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–æ–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è"
    await state.set_state(SupportStates.waiting_for_message)


async def process_support_message(message: types.Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    """
    language = message.from_user.language_code or DEFAULT_LANGUAGE
    user_id = message.from_user.id
    username = message.from_user.username or "N/A"
    user_fullname = f"{message.from_user.first_name or ''} {message.from_user.last_name or ''}".strip() or "N/A"

    # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    support_text = message.text

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    admin_message = (
        f"üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É\n\n"
        f"–û—Ç: {user_fullname} (@{username})\n"
        f"ID: {user_id}\n\n"
        f"–°–æ–æ–±—â–µ–Ω–∏–µ:\n{support_text}"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    for admin_id in ADMIN_IDS:
        try:
            await message.bot.send_message(
                chat_id=admin_id,
                text=admin_message,
                reply_markup=InlineKeyboardMarkup(
                    inline_keyboard=[
                        [InlineKeyboardButton(
                            text="–û—Ç–≤–µ—Ç–∏—Ç—å",
                            callback_data=f"support:reply:{user_id}"
                        )]
                    ]
                )
            )
        except Exception as e:
            logger.error(f"Error sending support message to admin {admin_id}: {e}")

    # –û—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
    await message.answer(
        get_localized_text('support_sent', language),
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(
                    text=get_localized_text('back_to_menu', language),
                    callback_data="menu:main"
                )]
            ]
        )
    )

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()


async def cancel_support(callback: types.CallbackQuery, state: FSMContext):
    """
    –û—Ç–º–µ–Ω—è–µ—Ç –¥–∏–∞–ª–æ–≥ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
    """
    language = callback.from_user.language_code or DEFAULT_LANGUAGE

    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
    await callback.answer()

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ
    await callback.message.answer(
        get_localized_text('support_cancelled', language),
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(
                    text=get_localized_text('back_to_menu', language),
                    callback_data="menu:main"
                )]
            ]
        )
    )


def get_localized_text(key: str, lang: str) -> str:
    """
    –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞—Å—å I18n middleware

    Args:
        key (str): –ö–ª—é—á —Ç–µ–∫—Å—Ç–∞
        lang (str): –ö–æ–¥ —è–∑—ã–∫–∞

    Returns:
        str: –õ–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
    """
    # –ë–∞–∑–æ–≤—ã–µ —Ç–µ–∫—Å—Ç—ã –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    texts = {
        'support_title': {
            'ru': 'üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞',
            'uk': 'üÜò –ü—ñ–¥—Ç—Ä–∏–º–∫–∞',
            'en': 'üÜò Support'
        },
        'support_description': {
            'ru': '–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å. –ù–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –æ—Ç–≤–µ—Ç—è—Ç –≤–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.',
            'uk': '–û–ø–∏—à—ñ—Ç—å –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∞–±–æ –∑–∞–¥–∞–π—Ç–µ –ø–∏—Ç–∞–Ω–Ω—è. –ù–∞—à—ñ —Ñ–∞—Ö—ñ–≤—Ü—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—è—Ç—å –≤–∞–º –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.',
            'en': 'Describe your problem or ask a question. Our specialists will answer you as soon as possible.'
        },
        'support_sent': {
            'ru': '‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É! –ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.',
            'uk': '‚úÖ –í–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –ø—ñ–¥—Ç—Ä–∏–º–∫—É! –ú–∏ –≤—ñ–¥–ø–æ–≤—ñ–º–æ –≤–∞–º –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.',
            'en': '‚úÖ Your message has been sent to support! We will answer you as soon as possible.'
        },
        'support_cancelled': {
            'ru': '‚ùå –û–±—Ä–∞—â–µ–Ω–∏–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –æ—Ç–º–µ–Ω–µ–Ω–æ.',
            'uk': '‚ùå –ó–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ —Å–∫–∞—Å–æ–≤–∞–Ω–æ.',
            'en': '‚ùå Support request cancelled.'
        },
        'back_to_menu': {
            'ru': 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é',
            'uk': 'üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é',
            'en': 'üîô Back to menu'
        },
        'cancel': {
            'ru': '–û—Ç–º–µ–Ω–∞',
            'uk': '–°–∫–∞—Å—É–≤–∞—Ç–∏',
            'en': 'Cancel'
        }
    }

    # –ï—Å–ª–∏ —è–∑—ã–∫ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä—É—Å—Å–∫–∏–π
    if lang not in ['ru', 'uk', 'en']:
        lang = 'ru'

    return texts.get(key, {}).get(lang, f"Missing text: {key}")


def register_support_handlers(dp: Dispatcher):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏

    Args:
        dp (Dispatcher): –î–∏—Å–ø–µ—Ç—á–µ—Ä –±–æ—Ç–∞
    """
    # –ö–æ–º–∞–Ω–¥–∞ /support
    dp.message.register(cmd_support, Command("support"))

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ waiting_for_message
    dp.message.register(process_support_message, SupportStates.waiting_for_message)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
    dp.callback_query.register(cancel_support,
                               lambda query: query.data == "support:cancel")