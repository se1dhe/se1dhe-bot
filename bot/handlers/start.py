# -*- coding: utf-8 -*-
from aiogram import Dispatcher, types
from aiogram.filters import Command
from sqlalchemy.orm import Session
from models.models import User
from database.db import Session as DbSession
from datetime import datetime
from config.settings import DEFAULT_LANGUAGE
from bot.keyboards.main_menu import get_main_menu_keyboard
import logging

logger = logging.getLogger(__name__)


async def cmd_start(message: types.Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ
    """
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name
    language = message.from_user.language_code or DEFAULT_LANGUAGE

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
    db = DbSession()
    try:
        user = db.query(User).filter(User.telegram_id == user_id).first()

        if not user:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            logger.info(f"Registering new user: {user_id}")
            user = User(
                telegram_id=user_id,
                username=username,
                first_name=first_name,
                last_name=last_name,
                language=language
            )
            db.add(user)
            db.commit()

            # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            welcome_text = _("welcome_new", message.from_user.language_code)
        else:
            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            user.username = username
            user.first_name = first_name
            user.last_name = last_name
            user.updated_at = datetime.utcnow()
            db.commit()

            # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            welcome_text = _("welcome_back", message.from_user.language_code)
    except Exception as e:
        logger.error(f"Error in start handler: {e}")
        db.rollback()
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        welcome_text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ SE1DHE Bot! ü§ñ\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:"
    finally:
        db.close()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –º–µ–Ω—é
    await message.answer(
        welcome_text,
        reply_markup=get_main_menu_keyboard(message.from_user.language_code)
    )


def _(key: str, lang: str = DEFAULT_LANGUAGE) -> str:
    """
    –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

    Args:
        key (str): –ö–ª—é—á —Å–æ–æ–±—â–µ–Ω–∏—è
        lang (str): –ö–æ–¥ —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Returns:
        str: –õ–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    """
    from bot.middlewares.i18n import I18nMiddleware

    # –ë–∞–∑–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–æ–≤
    messages = {
        'welcome_new': {
            'ru': "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ SE1DHE Bot! ü§ñ\n\n–Ø –ø–æ–º–æ–≥—É –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –∏ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –±–æ—Ç–∞ –¥–ª—è –≤–∞—à–∏—Ö –∑–∞–¥–∞—á. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:",
            'uk': "–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ SE1DHE Bot! ü§ñ\n\n–Ø –¥–æ–ø–æ–º–æ–∂—É –≤–∞–º –≤–∏–±—Ä–∞—Ç–∏ —Ç–∞ –ø—Ä–∏–¥–±–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ–≥–æ –±–æ—Ç–∞ –¥–ª—è –≤–∞—à–∏—Ö –∑–∞–≤–¥–∞–Ω—å. –í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é –∑ –º–µ–Ω—é –Ω–∏–∂—á–µ:",
            'en': "Welcome to SE1DHE Bot! ü§ñ\n\nI'll help you choose and purchase a suitable bot for your tasks. Select an action from the menu below:"
        },
        'welcome_back': {
            'ru': "–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º! ü§ñ\n\n–†–∞–¥ –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:",
            'uk': "–ó –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è–º! ü§ñ\n\n–†–∞–¥–∏–π –±–∞—á–∏—Ç–∏ –≤–∞—Å –∑–Ω–æ–≤—É. –í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é –∑ –º–µ–Ω—é –Ω–∏–∂—á–µ:",
            'en': "Welcome back! ü§ñ\n\nGlad to see you again. Select an action from the menu below:"
        }
    }

    # –ï—Å–ª–∏ —è–∑—ã–∫ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä—É—Å—Å–∫–∏–π
    if lang not in ['ru', 'uk', 'en']:
        lang = 'ru'

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞ –∏–ª–∏ —Ä—É—Å—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω
    return messages.get(key, {}).get(lang, messages.get(key, {}).get('ru', f"Message not found: {key}"))


def register_start_handlers(dp: Dispatcher):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start

    Args:
        dp (Dispatcher): –î–∏—Å–ø–µ—Ç—á–µ—Ä –±–æ—Ç–∞
    """
    dp.message.register(cmd_start, Command("start"))